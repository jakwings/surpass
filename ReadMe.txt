SURPASS(1)                Read This Fantastic Manual                SURPASS(1)

NAME
     surpass -- a simple password manager

SYNOPSIS
     surpass [<command> [<argument>]... [<option>]...]

DESCRIPTION
     surpass is a password manager that keeps the passwords encrypted with a
     public key generated by openssl(1).  On the other hand, decryption
     requires a paired secret key which is protected by a passphrase from the
     user.  This utility provides a series of commands for manipulating the
     password store which is a simple directory tree residing at
     "$HOME/.config/surpass".

     surpass is design for a single-user environment where no other users on
     the same host can eavesdrop on the running processes.  Please take great
     care about this.

     `surpass tree' is executed if no <command> is specified.

COMMANDS
     help [<command>]
           Show usage of a <command>, or show the full manual if no <command>
           is specified.

     init [key= | force]...
           Initialize the password store.  A new key pair named "surpass" (or
           the value from option `key') will be generated for future use.  Use
           option `force' to disable user interaction.

     new <passname> [key= | size= | charset= | grep= | push | copy | force]...
           Generate a random password and save it in a passfile named
           <passname> in the store.  The password will be encrypted by the
           default key pair "surpass" if the key pair to use is not specified
           by option `key'.  A custom password length can specified with
           option `size'.  Use option `charset' to limit the possible charac-
           ters with a pattern recognizable by tr(1).  Then option `grep' can
           be used to enforce a grep(1) pattern on the new password.  With an
           existing passfile and option `push' specified, the new password
           will be prepended to the original passfile instead of rewriting the
           whole passfile.  Use option `copy' to copy the password to the
           clipboard.  Use option `force' to disable user interaction.

     show <passname> [line= | grep= | copy | force]...
           Descrypt the passfile named <passname> from the password store and
           show the first line of the contents.  You can specify a line number
           in option `line' to show another line.  You can also filter the
           whole contents with a grep(1) pattern specified in option `grep'.
           Option `grep' overrides option `line'.  Use option `copy' to copy
           the password to the clipboard.  Use option `force' to disable user
           interaction.

     edit <passname> [key= | push | show | copy | force]...
           Save contents from standard input to the passfile named <passname>
           in the password store.  Encrypt the new contents using the default
           key pair named "surpass" unless specified in option `key'.  The new
           password is not echoed back unless option `show' is specified.
           With an existing passfile and option `push' specified, the new
           password will be prepended to the original passfile instead of
           rewriting the whole passfile.  Use option `copy' to copy the pass-
           word to the clipboard.  Use option `force' to disable user interac-
           tion.

     find <pattern> [tree]...
           Search the password store and show a list of passfiles the names of
           which all match the grep(1) <pattern>.  Use option `tree' to show a
           tree-view of passfiles.

           Command aliases: search

     tree [<passname>]
           Show a tree-view of the passfile or folder named <passname> in the
           password store.

     list [<passname>]
           Show a list of passfiles in the folder named <passname> or the
           passfile named <passname> in the password store.

           Command aliases: ls

     copy <passname> <newname> [force]...
           Copy the passfile named <passname> to passfile named <newname> in
           the password store.  Use option `force' to disable user interac-
           tion.

           Command aliases: cp

     move <passname> <newname> [force]...
           Move the passfile named <passname> to passfile named <newname> in
           the password store.  Use option `force' to disable user interac-
           tion.

           Command aliases: mv rename

     remove <passname> [all | force]...
           Remove the passfile named <passname> or remove all passfiles in the
           folder named <passname> from the password store.  To remove a non-
           empty folder option `all' must be specified.  Use option `force' to
           disable user interaction.

           Command aliases: rm delete del

     own <passfile> [key= | force]...
           Claim ownership of the passfile or folder named <passname> in the
           password store.  Re-encrypt the passfiles using the default key
           pair named "surpass" or using the one specified in option `key'.
           Use option `force' to disable user interaction.

     keys  List all available key pairs for encryption and decryption.

     <command> [<arguments>]
           If an executable file named "surpass-<command>" can be found, exe-
           cute it with the command line <arguments> after assigning the
           filepath of the surpass program to the environment variable
           SURPASS.

     Options take the form of <name>=<value> or just <name>.  An option <name>
     alone may not equal <name>="" (empty string).  But some options like
     `push', `copy', `all' and `force' always take effect once they are speci-
     fied on the command line.

ENVIRONMENT
     You can override the following variables before using surpass.

     SURPASS_HOME
             The location of the password store.

     SURPASS_PASSWORD_LENGTH
             The default length of new passwords.

     SURPASS_PASSWORD_CHARSET
             The default tr(1) charset for generating passwords.

     SURPASS_PASSWORD_GREP
             The default grep(1) pattern to enforce on new passwords.

     SURPASS_CLIPBOARD_COPY
             A custom command for copying passwords to the clipboard.

     SURPASS_CLIPBOARD_PASTE
             A custom command for pasting passwords from the clipboard.

     SURPASS_CLIPBOARD_TIMEOUT
             Seconds to wait before removing passwords from the clipboard.

     SURPASS_CMD_GREP
             The grep(1) command for filtering text content.

HISTORY
     surpass is a simple password manager inspired by pass, opm and jpm.
     Unlike its forefather pass, surpass is implemented in a POSIX shell
     instead of bash, and strives for minimum dependencies on external com-
     mands.  Its core dependency openssl can be easily replaced by other asym-
     metric key pair generation programs without too much hassle.

     pass https://www.passwordstore.org/
      opm https://github.com/rnagy/opm
      jpm https://github.com/jeremyevans/jpm

COPYRIGHT
     Copyright (C) 2021 Jak.W https://github.com/jakwings/surpass

       TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION

      0. You just DO WHAT THE FUCK YOU WANT TO.

BUGS
     Please report bugs to https://github.com/jakwings/surpass/issues

SEE ALSO
     openssl(1), openssl-smime(1), openssl-enc(1), tr(1), grep(1)

EOF                            December 18, 2021                           EOF
